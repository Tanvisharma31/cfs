"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./utils/errorHandler.js":
/*!*******************************!*\
  !*** ./utils/errorHandler.js ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleApiError: () => (/* binding */ handleApiError),\n/* harmony export */   handleApiErrorWithToast: () => (/* binding */ handleApiErrorWithToast)\n/* harmony export */ });\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-hot-toast */ \"(pages-dir-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n/**\r\n * Error handling utilities\r\n * Provides consistent error handling patterns across the application\r\n */ \n/**\r\n * Handles API errors consistently\r\n * @param {Error} error - The error object from the API call\r\n * @param {string} defaultMessage - Default message to show if no specific error message is available\r\n * @returns {string} The error message to display\r\n */ const handleApiError = function(error) {\n    let defaultMessage = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"An error occurred\";\n    var _error_response, _error_response1, _error_response2, _error_config, _error_config1, _error_config2, _error_response_data, _error_response3, _error_response_data1, _error_response4, _error_response_data2, _error_response5;\n    // Log detailed error information\n    console.error(\"API Error Details:\", {\n        message: error.message,\n        status: (_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status,\n        statusText: (_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.statusText,\n        data: (_error_response2 = error.response) === null || _error_response2 === void 0 ? void 0 : _error_response2.data,\n        url: (_error_config = error.config) === null || _error_config === void 0 ? void 0 : _error_config.url,\n        method: (_error_config1 = error.config) === null || _error_config1 === void 0 ? void 0 : _error_config1.method,\n        headers: (_error_config2 = error.config) === null || _error_config2 === void 0 ? void 0 : _error_config2.headers\n    });\n    // Extract the most useful error message\n    let message = defaultMessage;\n    // First check for error codes, then fall back to message mapping\n    if ((_error_response3 = error.response) === null || _error_response3 === void 0 ? void 0 : (_error_response_data = _error_response3.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.code) {\n        const errorCode = error.response.data.code;\n        // Map of error codes to user-friendly messages\n        const errorCodeMap = {\n            \"INVALID_LOGIN\": \"The email or password you entered is incorrect. Please try again.\",\n            \"INVALID_PASSWORD\": \"The password you entered is incorrect. Please try again.\",\n            \"EMAIL_IN_USE\": \"An account with this email already exists. Please use a different email or sign in.\",\n            \"INVALID_OTP\": \"The verification code you entered is invalid or has expired. Please try again.\",\n            \"OTP_REQUIRED\": \"This account uses OTP authentication. Please request an OTP.\",\n            \"PASSWORD_REQUIRED\": \"This account uses password authentication. Please provide your password.\",\n            \"SERVER_ERROR\": \"We're experiencing technical difficulties. Please try again later.\"\n        };\n        message = errorCodeMap[errorCode] || error.response.data.message;\n    } else if ((_error_response4 = error.response) === null || _error_response4 === void 0 ? void 0 : (_error_response_data1 = _error_response4.data) === null || _error_response_data1 === void 0 ? void 0 : _error_response_data1.message) {\n        const serverMessage = error.response.data.message;\n        // Map of server error messages to user-friendly messages\n        const errorMessageMap = {\n            \"Invalid credentials\": \"The email or password you entered is incorrect. Please try again.\",\n            \"User already exists\": \"An account with this email already exists. Please use a different email or sign in.\",\n            \"Server error\": \"We're experiencing technical difficulties. Please try again later.\",\n            \"Email already in use\": \"This email is already registered. Please use a different email or sign in.\"\n        };\n        message = errorMessageMap[serverMessage] || serverMessage;\n    } else if ((_error_response5 = error.response) === null || _error_response5 === void 0 ? void 0 : (_error_response_data2 = _error_response5.data) === null || _error_response_data2 === void 0 ? void 0 : _error_response_data2.error) {\n        message = error.response.data.error;\n    } else if (error.message && !error.message.includes(\"Network Error\")) {\n        message = error.message;\n    } else if (error.message && error.message.includes(\"Network Error\")) {\n        message = \"Unable to connect to the server. Please check your internet connection and try again.\";\n    }\n    return message;\n};\n/**\r\n * Shows an error toast and sets error state\r\n * @param {Error} error - The error object from the API call\r\n * @param {string} defaultMessage - Default message to show if no specific error message is available\r\n * @param {Function} setError - State setter function for error state\r\n */ const handleApiErrorWithToast = function(error, defaultMessage) {\n    let setError = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n    const errorMessage = handleApiError(error, defaultMessage);\n    react_hot_toast__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(errorMessage);\n    if (setError) {\n        setError(errorMessage);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./utils/errorHandler.js\n"));

/***/ })

});